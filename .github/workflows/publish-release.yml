name: "Publish new release"
# Reference for helpers below
# https://github.com/actions/github-script
# https://octokit.github.io/rest.js/v19
on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  release:
    name: Publish new release
    runs-on: ubuntu-latest
    # only merged pull requests that begin with 'release/' or 'hotfix/' must trigger this job
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' &&
      (startsWith(github.event.pull_request.head.ref, 'release/') || startsWith(github.event.pull_request.head.ref, 'hotfix/'))

    steps:
      - name: Extract version from branch name (for release branches)
        if: startsWith(github.event.pull_request.head.ref, 'release/')
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#release/}

          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Extract version from branch name (for hotfix branches)
        if: startsWith(github.event.pull_request.head.ref, 'hotfix/')
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#hotfix/}

          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
      
      - name: "Create release"
        uses: "actions/github-script@v6"
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |
            try {
              await github.rest.repos.createRelease({
                draft: false,
                generate_release_notes: true,
                name: "${{ env.RELEASE_VERSION }}",
                owner: context.repo.owner,
                prerelease: false,
                repo: context.repo.repo,
                tag_name: "release/${{ env.RELEASE_VERSION }}",
              });
            } catch (error) {
              core.setFailed(error.message);
            }
      - name: "Create pull request to develop"
        #if: startsWith(github.event.pull_request.head.ref, 'hotfix/')
        uses: "actions/github-script@v6"
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |
            try {
              await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                head: "main",
                base: "develop",
                title: "Release ${{ env.RELEASE_VERSION }} to develop"
              });
            } catch (error) {
              core.setFailed(error.message);
            }